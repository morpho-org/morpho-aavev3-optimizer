name: Forge tests

on:
  workflow_call:
    inputs:
      unit-fuzz-runs:
        description: The number of fuzz rounds to perform for each fuzzing unit test.
        required: false
        default: 16384
        type: number
      internal-fuzz-runs:
        description: The number of fuzz rounds to perform for each fuzzing unit test.
        required: false
        default: 32
        type: number
      integration-fuzz-runs:
        description: The number of fuzz rounds to perform for each fuzzing unit test.
        required: false
        default: 32
        type: number
      invariant-runs:
        description: The number of runs to perform for invariant tests.
        required: false
        default: 8
        type: number
      invariant-depth:
        description: The depth of invariant tests.
        required: false
        default: 256
        type: number
      coverageThreshold:
        description: The coverage threshold below which to fail the action.
        required: false
        type: number
    secrets:
      ALCHEMY_KEY:
        required: false
      CODECOV_TOKEN:
        required: false

env:
  FOUNDRY_PROFILE: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-via-ir:
    name: Compilation (via IR)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build contracts via IR & check sizes
        run: make contracts # don't use compilation cache

  build-no-ir:
    name: Compilation (without IR)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Build contracts without IR
        run: forge build

      - name: Save forge compilation cache
        uses: actions/cache/save@v4
        with:
          path: |
            cache
            out
          key: forge-${{ github.ref_name }}-${{ github.run_id }}

  storage-check:
    needs: build-no-ir

    name: Storage upgrade check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Check Morpho storage layout
        uses: Rubilmax/foundry-storage-check@v3
        with:
          contract: src/Morpho.sol:Morpho
          rpcUrl: wss://eth-mainnet.g.alchemy.com/v2/${{ secrets.ALCHEMY_KEY }}
          address: "0x33333aea097c193e66081E930c33020272b33333"
          failOnRemoval: true

  test-unit:
    needs: build-no-ir

    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Run unit tests
        run: make test-unit
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
          FOUNDRY_FUZZ_RUNS: ${{ inputs.unit-fuzz-runs }}
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

  test-internal:
    needs: build-no-ir

    name: Internal tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Run internal tests
        run: make test-internal
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
          FOUNDRY_FUZZ_RUNS: ${{ inputs.internal-fuzz-runs }}
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

  test-integration:
    needs: build-no-ir

    name: Integration tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Run integration tests & create gas report
        run: set -o pipefail && make gas-report | tee gasreport.ansi
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
          FOUNDRY_FUZZ_RUNS: ${{ inputs.integration-fuzz-runs }}
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

      - name: Compare gas reports
        uses: Rubilmax/foundry-gas-diff@v3
        id: gas_diff
        with:
          match: src/Morpho.sol
          report: gasreport.ansi

  test-invariant:
    needs: build-no-ir

    name: Invariant tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Run invariant tests
        run: make test-invariant
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
          FOUNDRY_INVARIANT_RUNS: ${{ inputs.invariant-runs }}
          FOUNDRY_INVARIANT_DEPTH: ${{ inputs.invariant-depth }}
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

  coverage:
    needs:
      - test-unit
      - test-internal
      - test-integration
      - test-invariant
    if: inputs.coverageThreshold != ''

    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/install

      - name: Install lcov
        if: ${{ inputs.codecovToken != '' }}
        run: sudo apt-get install -y lcov

      - name: Generate lcov coverage report
        run: make coverage
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}

      - name: Check coverage threshold
        run: npx lcov-total lcov.info --gte=${{ inputs.coverageThreshold }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: morpho-aave-v3
          files: lcov.info
